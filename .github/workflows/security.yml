name: Docker security checks

on:
  workflow_call:
    inputs:
      image-tag:
        description: Tag of Docker image (without repository) to verify
        required: true
        type: string
      role-to-assume:
        description: Role to assume that has read access to the registry.
        required: false
        type: string
      role-session-name:
        description: Session name to use when assuming the role.
        required: false
        type: string
      working-directory:
        description: Workflow working directory
        default: '.'
        required: false
        type: string
    secrets:
      REGISTRY:
        description: The registry where the image will be pulled from.
        required: true
      ECR_AWS_ACCESS_KEY_ID:
        description: DEPRECATED. An AWS access key ID that has read permissions to the registry.
        required: false
      ECR_AWS_SECRET_ACCESS_KEY:
        description: DEPRECATED. An AWS secret access key that has read permissions to the registry.
        required: false
      ECR_AWS_REGION:
        description: AWS region for the registry.
        required: true
      ECR_ROLE_TO_ASSUME:
        description: Role to assume that has read access to the registry.
        required: false

jobs:
  sast:
    name: Docker SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute report name
        id: report-name
        shell: bash
        run: |
          image_name=$(echo "${{ inputs.image-tag }}" | cut -d ':' -f1)
          report_name="docker-sast-${image_name}"

          echo "report-name=$report_name" >> $GITHUB_OUTPUT

      - name: SAST
        uses: equisoft-actions/docker-sast@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.ECR_AWS_REGION }}
          image-name: ${{ secrets.REGISTRY }}/${{ inputs.image-tag }}
          report-name: ${{ steps.report-name.outputs.report-name }}
          role-to-assume: ${{ inputs.role-to-assume || secrets.ECR_ROLE_TO_ASSUME }}
          role-session-name: ${{ inputs.role-session-name }}
          working-directory: ${{ inputs.working-directory }}

  sbom:
    name: Docker SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate and publish SBOM
        uses: equisoft-actions/docker-sbom@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.ECR_AWS_REGION }}
          image-name: ${{ secrets.REGISTRY }}/${{ inputs.image-tag }}
          role-to-assume: ${{ inputs.role-to-assume || secrets.ECR_ROLE_TO_ASSUME }}
          role-session-name: ${{ inputs.role-session-name }}
          working-directory: ${{ inputs.working-directory }}
